{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/load.js","../../src/lifecycles/mount.js","../../src/lifecycles/unmount.js","../../src/start.js","../../src/navigations/navigator-events.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 描述应用的整个状态\nexport const NOT_LOADED = \"NOT_LOADED\"; // 应用初始状态\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\"; // 加载资源\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\"; // 还没有调用bootstrap方法\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\"; // 启动中\nexport const NOT_MOUNTED = \"NOT_MOUNTED\"; // 没有调用mount方法\nexport const MOUNTING = \"MOUNTING\"; // 正在挂载中\nexport const MOUNTED = \"MOUNTED\"; // 挂在完毕\nexport const UPDATING = \"UPDATING\"; // 更新中\nexport const UNMOUNTING = \"UNMOUNTING\"; // 解除挂载\nexport const UNLOADING = \"UNLOADING\"; // 完全卸载中\nexport const LOAD_ERR = \"LOAD_ERR\"; // 资源加载失败\nexport const SKIP_BECAUE_BROKEN = \"SKIP_BECAUE_BROKEN\"; // 出错（代码异常）\n\n// 当前应用是否被激活\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\n// 当前这个应用是否要被激活\nexport function shouldBeActive(app) {\n  // 如果返回 true，那么应用就开始初始化等一系列操作\n  return app.activeWhen(window.location);\n}\n","import {\n  BOOTSTRAPPING,\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n} from \"../applications/app.helpers\";\n\nexport async function toBootstrapPromise(app) {\n  if (app.status !== NOT_BOOTSTRAPPED) {\n    return app;\n  }\n  app.status = BOOTSTRAPPING;\n  await app.bootstrap(app.customProps);\n  app.status = NOT_MOUNTED;\n  return app;\n}\n","import {\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n} from \"../applications/app.helpers\";\n\nfunction flattenFnArray(funcs) {\n  funcs = Array.isArray(funcs) ? funcs : [funcs];\n  // 通过promise链来链式调用，多个方法组合成一个方法\n  return (props) =>\n    funcs.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\n}\n\nexport async function toLoadPromise(app) {\n  if (app.loadPromise) {\n    return app.loadPromise;\n  }\n  return (app.loadPromise = Promise.resolve().then(async () => {\n    app.status = LOADING_SOURCE_CODE;\n    let { bootstrap, mount, unmount } = await app.loadApp(app.customProps);\n    app.status = NOT_BOOTSTRAPPED; // 没有调用bootstrap方法\n    // 将多个promise组合在一起，compose\n    app.bootstrap = flattenFnArray(bootstrap);\n    app.mount = flattenFnArray(mount);\n    app.unmount = flattenFnArray(unmount);\n    delete app.loadPromise;\n    return app;\n  }));\n}\n","import { MOUNTED, MOUNTING, NOT_MOUNTED } from \"../applications/app.helpers\";\n\nexport async function toMountPromise(app) {\n  if (app.status !== NOT_MOUNTED) {\n    return app;\n  }\n  app.status = MOUNTING;\n  await app.mount(app.customProps);\n  app.status = MOUNTED;\n  return app;\n}\n","import { MOUNTED, NOT_MOUNTED, UNMOUNTING } from \"../applications/app.helpers\";\n\nexport async function toUnmountPromise(app) {\n  // 当前应用没有被挂载，直接什么都不做\n  if (app.status !== MOUNTED) {\n    return app;\n  }\n  app.status = UNMOUNTING;\n  await app.unmount(app.customProps);\n  app.status = NOT_MOUNTED;\n  return app;\n}\n","import { reroute } from \"./navigations/reroute\";\n\nexport let started = false;\n\nexport function start() {\n  // 需要挂载\n  started = true;\n  reroute(); // 除了取加载应用还需要去挂载应用\n}\n","import { reroute } from \"./reroute\";\n\n// hashChange popstate\nexport const routingEventsListeningTo = [\"hashchange\", \"popstate\"];\n\nfunction urlReroute() {\n  reroute([], arguments); // 会根据路径重新加载不同的应用\n}\n\nconst capturedEventListeners = {\n  // 后续挂载的事件先暂存起来\n  hashchanage: [],\n  popstate: [], // 当应用切换完成后可以调用\n};\n\n// 我们处理应用加载的逻辑是在最前面\nwindow.addEventListener(\"hashchange\", urlReroute);\nwindow.addEventListener(\"popstate\", urlReroute);\n\nconst originalAddevnetListener = window.addEventListener;\nconst originalRemoveEventListener = window.removeEventListener;\n\nwindow.addEventListener = function (eventName, fn) {\n  if (\n    routingEventsListeningTo.indexOf(eventName) > -1 &&\n    !capturedEventListeners[eventName].some((listener) => listener === fn)\n  ) {\n    capturedEventListeners[eventName].push(fn);\n    return;\n  }\n  return originalAddevnetListener.apply(this, arguments);\n};\n\nwindow.removeEventListener = function (eventName, fn) {\n  if (routingEventsListeningTo.indexOf(eventName) > -1) {\n    capturedEventListeners[eventName] = capturedEventListeners[\n      eventName\n    ].filter((l) => l !== fn);\n    return;\n  }\n  return originalRemoveEventListener.apply(this, arguments);\n};\n\nfunction patchedUpdateState(updateState, methodName) {\n  return function () {\n    const urlBefore = window.location.href;\n    updateState.apply(this, arguments); // 调用切换方法\n    const urlAfter = window.location.href\n    if (urlBefore !== urlAfter) {\n      // 重新加载应用，传入事件源\n      urlReroute(new PopStateEvent('popstate'))\n    }\n  };\n}\n\n// 如果是hash路由，hash变化时可以切换\n// 浏览器路由是基于h5 api，如果切换时，不会触发popstate\nwindow.history.pushState = patchedUpdateState(\n  window.history.pushState,\n  \"pushState\"\n);\nwindow.history.replaceState = patchedUpdateState(\n  window.history.replaceState,\n  \"replaceState\"\n);\n\n// 用户还会绑定自己的路由事件 vue\n// 当我们应用切换后，还需要处理原先的方法 vue-router，需要在应用切换后再执行\n","import { getAppchanges } from \"../applications/app\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toMountPromise } from \"../lifecycles/mount\";\nimport { toUnmountPromise } from \"../lifecycles/unmount\";\nimport { started } from \"../start\";\nimport './navigator-events'\n\n// 核心应用处理方法\nexport function reroute() {\n  // 获取需要被加载的应用\n  // 获取需要被挂载的应用\n  // 哪些应用需要被卸载\n  const { appsToLoad, appsToMount, appsToUnmount } = getAppchanges();\n  // start方法调用时是同步的，但是加载流程是异步的\n  if (started) {\n    // app装载\n    return performAppChanges(); // 根据路径来装载应用\n  } else {\n    // 注册应用时，需要预先加载\n    return loadApps(); // 预加载应用\n  }\n\n  // 预加载应用\n  async function loadApps() {\n    // 获取到 bootstrap mount unmount 方法，放到app上\n    let apps = await Promise.all(appsToLoad.map(toLoadPromise));\n  }\n  // 根据路径来装载应用\n  async function performAppChanges() {\n    // 先卸载不需要的应用\n    let unmountPromises = appsToUnmount.map(toUnmountPromise); // 需要去卸载的app\n    // 去加载需要的应用\n    appsToLoad.map(async (app) => {\n      // 将需要取加载的应用拿到 => 加载 => 启动 => 挂载\n      app = await toLoadPromise(app);\n      app = await toBootstrapPromise(app);\n      return toMountPromise(app);\n    });\n    appsToMount.map(async (app) => {\n      app = await toBootstrapPromise(app);\n      return toMountPromise(app);\n    });\n  }\n}\n\n// 这个流程是用于初始化操作的，我们还需要当路径切换时，重新加载应用\n\n// 重写路由相关的方法\n","import { reroute } from \"../navigations/reroute\";\nimport {\n  BOOTSTRAPPING,\n  LOADING_SOURCE_CODE,\n  MOUNTED,\n  NOT_BOOTSTRAPPED,\n  NOT_LOADED,\n  NOT_MOUNTED,\n  shouldBeActive,\n  SKIP_BECAUE_BROKEN,\n} from \"./app.helpers\";\n\n/**\n *\n * @param {*} appName 应用名字\n * @param {*} loadApp 加载的应用\n * @param {*} activeWhen 当激活时会调用 loadApp\n * @param {*} customProps 自定义属性\n */\n\nconst apps = []; // 用来存放所有的应用\n\n// 维护应用所有的状态 => 状态机\nexport function registerApplication(appName, loadApp, activeWhen, customProps) {\n  apps.push({\n    name: appName,\n    loadApp,\n    activeWhen,\n    customProps,\n    status: NOT_LOADED,\n  });\n  // 生命周期\n  reroute(); // 加载应用\n}\n\nexport function getAppchanges() {\n  const appsToUnmount = []; // 要卸载的app\n  const appsToLoad = []; // 要加载的app\n  const appsToMount = []; // 要挂载的app\n  apps.forEach((app) => {\n    // 需不需要被加载\n    // const appShouldBeActive = app.status !== SKIP_BECAUE_BROKEN && shouldBeActive(app)\n    const appShouldBeActive = shouldBeActive(app);\n    switch (app.status) {\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        if (appShouldBeActive) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_BOOTSTRAPPED:\n      case BOOTSTRAPPING:\n      case NOT_MOUNTED:\n        if (appShouldBeActive) {\n          appsToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        if (!appShouldBeActive) {\n          appsToUnmount.push(app);\n        }\n      default:\n        break;\n    }\n  });\n  return {\n    appsToLoad,\n    appsToMount,\n    appsToUnmount,\n  };\n}\n"],"names":[],"mappings":"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"}